[
  {
    "ContainingType": "Service.Controller.AuthenticationController",
    "Method": "Login",
    "RelativePath": "api/v1/Authentication/Login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "so",
        "Type": "Service.ServiceObject.SoAuthentication",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Service.ServiceObject.SoAuthentication",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Service.Controller.AuthenticationController",
    "Method": "RefreshToken",
    "RelativePath": "api/v1/Authentication/RefreshToken",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "so",
        "Type": "DataTransferLayer.OtherObject.Tokens",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Service.ServiceObject.SoAuthentication",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Service.Controller.BrandController",
    "Method": "GetAllBrands",
    "RelativePath": "api/v1/Brand/GetAllBrands",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "Service.ServiceObject.SoBrand",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Service.Controller.BrandController",
    "Method": "GetBrandById",
    "RelativePath": "api/v1/Brand/GetBrandById",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Service.ServiceObject.SoBrand",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Service.Controller.BrandController",
    "Method": "RegisterBrand",
    "RelativePath": "api/v1/Brand/RegisterBrand",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "so",
        "Type": "Service.ServiceObject.SoBrand",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "DataTransferLayer.OtherObject.DtoMessage",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Service.Controller.BrandController",
    "Method": "UpdateBrand",
    "RelativePath": "api/v1/Brand/UpdateBrand",
    "HttpMethod": "PATCH",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "so",
        "Type": "Service.ServiceObject.SoBrand",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "DataTransferLayer.OtherObject.DtoMessage",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Service.Controller.DashBoardController",
    "Method": "GetDashboard",
    "RelativePath": "api/v1/DashBoard/GetDashboard",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "Service.ServiceObject.SoDashboard",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Service.Controller.MotorcycleController",
    "Method": "DisableMotorcycle",
    "RelativePath": "api/v1/Motorcycle/DisableMotorcycle",
    "HttpMethod": "PATCH",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "DataTransferLayer.OtherObject.DtoMessage",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Service.Controller.MotorcycleController",
    "Method": "EnableMotorcycle",
    "RelativePath": "api/v1/Motorcycle/EnableMotorcycle",
    "HttpMethod": "PATCH",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "DataTransferLayer.OtherObject.DtoMessage",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Service.Controller.MotorcycleController",
    "Method": "GetAllMotorcycles",
    "RelativePath": "api/v1/Motorcycle/GetAllMotorcycles",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "Service.ServiceObject.SoMotorcycle",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Service.Controller.MotorcycleController",
    "Method": "GetMotorcyclesById",
    "RelativePath": "api/v1/Motorcycle/GetMotorcyclesById",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Service.ServiceObject.SoMotorcycle",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Service.Controller.MotorcycleController",
    "Method": "Register",
    "RelativePath": "api/v1/Motorcycle/Register",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "so",
        "Type": "Service.ServiceObject.SoMotorcycle",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "DataTransferLayer.OtherObject.DtoMessage",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Service.Controller.MotorcycleController",
    "Method": "Update",
    "RelativePath": "api/v1/Motorcycle/Update",
    "HttpMethod": "PATCH",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "so",
        "Type": "Service.ServiceObject.SoMotorcycle",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "DataTransferLayer.OtherObject.DtoMessage",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Service.Controller.OwnerController",
    "Method": "ChangePassword",
    "RelativePath": "api/v1/Owner/ChangePassword",
    "HttpMethod": "PATCH",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "so",
        "Type": "DataTransferLayer.OtherObject.DtoPassword",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "DataTransferLayer.OtherObject.DtoMessage",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Service.Controller.OwnerController",
    "Method": "Delete",
    "RelativePath": "api/v1/Owner/Delete",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "so",
        "Type": "DataTransferLayer.OtherObject.PasswordRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "DataTransferLayer.OtherObject.DtoMessage",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Service.Controller.OwnerController",
    "Method": "DeletePictureProfileOwner",
    "RelativePath": "api/v1/Owner/DeletePictureProfileOwner",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "DataTransferLayer.OtherObject.DtoMessage",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Service.Controller.OwnerController",
    "Method": "GetAll",
    "RelativePath": "api/v1/Owner/GetAll",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "Service.ServiceObject.SoOwner",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Service.Controller.OwnerController",
    "Method": "MyProfile",
    "RelativePath": "api/v1/Owner/MyProfile",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "Service.ServiceObject.SoOwner",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Service.Controller.OwnerController",
    "Method": "PromoteOrDemoteUser",
    "RelativePath": "api/v1/Owner/PromoteOrDemoteUser",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "so",
        "Type": "Service.ServiceObject.SoOwner",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "DataTransferLayer.OtherObject.DtoMessage",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Service.Controller.OwnerController",
    "Method": "Register",
    "RelativePath": "api/v1/Owner/Register",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "so",
        "Type": "Service.ServiceObject.SoOwner",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "DataTransferLayer.OtherObject.DtoMessage",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Service.Controller.OwnerController",
    "Method": "Update",
    "RelativePath": "api/v1/Owner/Update",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "so",
        "Type": "Service.ServiceObject.SoOwner",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "DataTransferLayer.OtherObject.DtoMessage",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Service.Controller.OwnerController",
    "Method": "UpdateProfilePicture",
    "RelativePath": "api/v1/Owner/UpdateProfilePicture",
    "HttpMethod": "PATCH",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "file",
        "Type": "Microsoft.AspNetCore.Http.IFormFile",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "DataTransferLayer.OtherObject.DtoMessage",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Service.Controller.SalesController",
    "Method": "CreateSale",
    "RelativePath": "api/v1/Sales/CreateSale",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "so",
        "Type": "Service.ServiceObject.SoSales",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "DataTransferLayer.OtherObject.DtoMessage",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Service.Controller.SalesController",
    "Method": "GetAllSales",
    "RelativePath": "api/v1/Sales/GetAllSales",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "Service.ServiceObject.SoSales",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Service.Controller.SalesController",
    "Method": "GetAllSalesByOwner",
    "RelativePath": "api/v1/Sales/GetAllSalesByOwner",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "Service.ServiceObject.SoSales",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Service.Controller.SalesController",
    "Method": "GetSaleById",
    "RelativePath": "api/v1/Sales/GetSaleById",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "saleId",
        "Type": "System.Guid",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Service.ServiceObject.SoSales",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Service.Controller.ServicesController",
    "Method": "GetAllServices",
    "RelativePath": "api/v1/Services/GetAllServices",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "Service.ServiceObject.SoServices",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Service.Controller.ServicesController",
    "Method": "GetServicesById",
    "RelativePath": "api/v1/Services/GetServicesById",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Service.ServiceObject.SoServices",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Service.Controller.ServicesController",
    "Method": "RegisterService",
    "RelativePath": "api/v1/Services/RegisterService",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "so",
        "Type": "Service.ServiceObject.SoServices",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "DataTransferLayer.OtherObject.DtoMessage",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Service.Controller.ServicesController",
    "Method": "UpdateService",
    "RelativePath": "api/v1/Services/UpdateService",
    "HttpMethod": "PATCH",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "so",
        "Type": "Service.ServiceObject.SoServices",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "DataTransferLayer.OtherObject.DtoMessage",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Service.Controller.TypesController",
    "Method": "GetAllTypes",
    "RelativePath": "api/v1/Types/GetAllTypes",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "Service.ServiceObject.SoTypes",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Service.Controller.TypesController",
    "Method": "GetTypesById",
    "RelativePath": "api/v1/Types/GetTypesById",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Service.ServiceObject.SoTypes",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Service.Controller.TypesController",
    "Method": "RegisterTypes",
    "RelativePath": "api/v1/Types/RegisterTypes",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "so",
        "Type": "Service.ServiceObject.SoTypes",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "DataTransferLayer.OtherObject.DtoMessage",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Service.Controller.TypesController",
    "Method": "UpdateTypes",
    "RelativePath": "api/v1/Types/UpdateTypes",
    "HttpMethod": "PATCH",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "so",
        "Type": "Service.ServiceObject.SoTypes",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "DataTransferLayer.OtherObject.DtoMessage",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Service.Controller.UserController",
    "Method": "CheckByDni",
    "RelativePath": "api/v1/User/CheckByDni",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dni",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Service.Controller.UserController",
    "Method": "GetAll",
    "RelativePath": "api/v1/User/GetAll",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "Service.ServiceObject.SoUser",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Service.Controller.UserController",
    "Method": "GetAllByDocument",
    "RelativePath": "api/v1/User/GetAllByDocument",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "documentNumber",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Service.Controller.UserController",
    "Method": "GetUserByDocumentNumber",
    "RelativePath": "api/v1/User/GetUserByDocumentNumber",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "documentNumber",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Service.ServiceObject.SoUser",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Service.Controller.UserController",
    "Method": "GetUserById",
    "RelativePath": "api/v1/User/GetUserById",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Guid",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Service.ServiceObject.SoUser",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Service.Controller.UserController",
    "Method": "Register",
    "RelativePath": "api/v1/User/Register",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "so",
        "Type": "Service.ServiceObject.SoUser",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "DataTransferLayer.OtherObject.DtoMessage",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Service.Controller.UserController",
    "Method": "Update",
    "RelativePath": "api/v1/User/Update",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "so",
        "Type": "Service.ServiceObject.SoUser",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "DataTransferLayer.OtherObject.DtoMessage",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  }
]